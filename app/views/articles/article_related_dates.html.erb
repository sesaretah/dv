<%= render partial: 'articles/progress_bar', locals: {article: @article, active: ['titles', 'descriptors', 'related_dates']}%>
<div class='row row-cards row-deck'>
  <div  class='col-sm-6 col-lg-6'>
    <div class="card">
      <div class="card-header">
        <h3 class="card-title"><%=t :article_dates_form%></h3>
      </div>
      <div class="card-status card-status-left bg-blue"></div>
      <div class="card-body">
        <% if permit_by_workflow(@article, current_user,'datings')%>
          <%= render partial: 'datings/remote_form', locals: {article: @article, dating: Dating.new}%>
        <%end%>
      </div>
    </div>
  </div>

  <div class='col-sm-6 col-lg-6'>
    <div class="card">
      <div class="card-header">
        <h3 class="card-title"><%=t :article_dates_list%></h3>
      </div>
        <%= render partial: 'datings/list', locals: {article: @article}%>
    </div>
  </div>
</div>

<div class="card">
  <% if permit_by_workflow(@article, current_user,'uploads')%>
  <div class="card-header">
    <h3 class="card-title"><%=t :attached_file%></h3>
  </div>
  <div class="card-body">
    <%= form_for(Upload.new, html: {class: 'dropzone'}) do |f| %>
    <%= f.hidden_field :uploadable_type, value: 'Article'%>
    <%= f.hidden_field :uploadable_id, value: @article.id%>
    <%= f.hidden_field :attachment_type, value: 'article_attachment'%>
    <%= hidden_field_tag :file_type, 'picture'%>
    <div class="fallback">
      <%= f.file_field :picture %><br>
      <%= f.hidden_field :uploadable_type, value: 'Article'%>
      <%= f.hidden_field :uploadable_id, value: @article.id%>
      <%= f.hidden_field :attachment_type, value: 'article_attachment'%>
      <%= f.submit "Upload" %>
    </div>
    <% end %>
    <script>
    Dropzone.autoDiscover = false;
    $("#new_upload").dropzone({
      dictDefaultMessage : "<%=t :drop_files_here_to_upload%>",
      dictRemoveFile : "<%=t :remove_file %>",
      acceptedFiles : '.docx,.doc,.pdf,.txt, .png,.jpg,.jpeg',
      addRemoveLinks: true,
      removedfile: function(file) {
        $.get( "/uploads/remoted/" + file.id, function( data ) {
          console.log(data);
        });
        var _ref;
        return (_ref = file.previewElement) != null ? _ref.parentNode.removeChild(file.previewElement) : void 0;
      },
      init: function () {
        this.on("success", function(file, responseText) {
          file.id = responseText.id;
        });

        <% for upload in Upload.where(uploadable_type: 'Article', uploadable_id: @article.id, attachment_type: 'article_attachment')%>
        var mockFile = { name: "<%= upload.attachment_file_name%>", size: <%= upload.attachment_file_size%>, url: "<%= upload.attachment.url%>", id: <%= upload.id%> };
        this.options.addedfile.call(this, mockFile);
        this.options.thumbnail.call(this, mockFile, "<%= upload.attachment(:large)%>");
        mockFile.previewElement.classList.add('dz-success');
        mockFile.previewElement.classList.add('dz-complete');
        <%end%>
      }
    });
    </script>
  </div>
  <%end%>
  <div class="card-footer text-right">
    <a href='/articles/article_descriptors/<%= @article.id%>' class="btn btn-lime"><%=t :back%></a>
    <a href='/articles/article_other_details/<%= @article.id%>' class="btn btn-primary"><%=t :submit_and_go%></a>
  </div>
</div>
